Um die  Versionierung der Dokumentation automatisch generieren zu lassen, haben wir LaTeX so mit Scripts erweitert, so dass die git Head Versionsnummer
direkt ins Dokument eingefügt wird. Somit bleibt diese Information auch auf einem Ausdruck akkurat. Gegenüber einer manuellen inkrementierung der Version, hat die automatisierung den Vorteil, dass sie auch im Stress nicht vergessen wird. Das Ergebniss sieht man am Ende des Dokuments.

LaTeX kann code ausführen. wir haben den Code in Shellscripte ausgelagert, und lassen den compiler diese aufrufen.
Im LaTeX file steht nun folgender Code.
\begin{lstlisting}
 \noindent
Automatische Versionierung:
\immediate\write18{../script/versionInfo.sh}
\input{../script/version}
\immediate\write18{../script/cleanup.sh}
\end{lstlisting}


Wir schreiben den output in eine version.tex Datei.  Auf Zeile 9 lassen wir git HEAD nummer in die Datei speichern, welche beim pushen jeweils inkrementiert wird.
\begin{lstlisting}
#!/bin/sh
OUTPUT="../script/version.tex"

echo "Last compiled: ">$OUTPUT
date >> $OUTPUT

echo "\n">>$OUTPUT

echo "Git HEAD Version: ">> $OUTPUT
git rev-list --count --first-parent HEAD >>$OUTPUT
\end{lstlisting}
Dann wird ein cleanup durchgeführt, dabei wird die Output Datei mit einer Fehlermeldung versehen, so dass der User bemerkt, falls die Automatische Versionierung fehlschlägt.
\begin{lstlisting}
#!/bin/sh
OUTPUT="../script/version.tex"
echo "Fetching version information failed. Please enable shell-escape in your \LaTeX \~  compiler.">$OUTPUT
\end{lstlisting}
Die automatisch generierte Datei wird nach der Generierung in das Dokument eingebunden.